import{s as E,f as i,a as r,g as a,K as l,c as s,i as o,v as L,d as n}from"./scheduler.4ddb5076.js";import{S as K,i as Q}from"./index.9cd1e3e1.js";function U(W){let h,A=`Recently, many of my electronics projects have required the use of components that are only available in SMD form. While I can solder most SMD components by hand, and most components can be bought on break-out boards, I decided that it was time to up my game in the SMD soldering department. After all, SMD is not going away, and I want to be prepared for when and if the through-hole components I need become completely unavailable. The ‘breaking point’ for me was during the development of my <a href="https://bojit.org/projects/Stepper_Driver">closed-loop stepper driver</a>, where I had to use a fine-pitched QFN chip for the motor drive, and was destroying several chips trying to solder them by hand. To prevent further frustration, I decided to make a reflow oven.
There are plenty of articles online showing toaster -&gt; reflow oven conversions, however they all tend to be overly complex and tend to be optimised towards buying the components as a kit rather than using the dev boards we already have on hand. Moreover, they tend to be designed as ‘add-on’ controllers that are housed outside of the toaster oven enclosure, making them bulky and less pretty (I know looks aren’t a priority here, but it’s always nice to have decent looking tools). After looking at some open-source controllers online and not being particularly happy with any of them, I decided to make my own.
For the oven I used the cheapest one I could find: the <em>‘Ambiano Mini toaster oven’</em> from ALDI. These ovens only cost £20 new, but are surprisingly well made. Most importantly, they have lots of internal space to house a new controller!`,I,d,S='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Ambiano_Red.JPG" alt="Reflow_Oven-Ambiano_Red.JPG"/>',k,m,j=`The most important aspect of a reflow oven in my opinion is the ability to ramp up the temperature as rapidly as possible. To do this with an oven that is relatively underpowered, I had to insulate the oven as well as possible. For this I used <a href="https://www.ebay.co.uk/itm/Superwool-25mm-x-96kg-Pizza-Oven-Kiln-Forge-fire-proof-insulation/303551929705?hash=item46ad1add69:g:nOEAAOSwYK1bFQUQ" rel="nofollow">ceramic pizza oven insulation</a>, sandwiched between the inner and outer shell. One thing to note when working with this insulation is that it is made up of lots of loose fibres. When working with it, breathing protection must be worn, and work outside to avoid dropping fibres everywhere. To neaten up my insulation, I enclosed the ceramic fibre in an aluminium foil blanket, then covered most of the foil with kapton tape, creating a removable blanket with cutouts for the heating elements.
A quick look inside the enclosure (pictured below) reassured me that I would have plenty of space to install the controller. I also suspected I would be able to re-use the existing dials on the oven to interface with the controlller, meaning I wouldn’t have to drill any more ugly holes in the outer enclosure. I stripped out most of the innards straight away, but kept hold of the wires and spade connectors. The original ones are fibreglass high temperature cables, so it seemed sensible to re-use them when wiring in my controller.`,T,u,G='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Internals_Original.JPG" alt="Reflow_Oven-Internals_Original.JPG"/>',_,c,J=`While my controller is not stock, I did not build the entire PID control system from scratch. My firmware is based very closedly on <strong>giacu92’s</strong> <a href="https://github.com/giacu92/Arduino-Reflow-Oven-Controller" rel="nofollow">reflow oven firmware</a> for the Arduino Nano. My version is very similar, but I have changed the menu structure and interface connections to make it more suitable for my oven’s existing controls. One very nice feature of giacu92’s firmware is that it is designed to be paired with a control/tuning application, which means I don’t need to make a detailed means of tuning the PID and reflow curves through the oven controls.
Other than a few firmware adjustments, my main changes to giacu92’s project were to the hardware layout. Because I wanted to build the entire controller into the oven housing, I modified the PCB design to fit within the footprint of the LCD screen, and made the layout entirely through hole and single-sided. It is worth noting that the control circuit is simple enough to make on stripboard or even just soldered point-to-point, but as I have the equipment to etch simple single-sided boards on hand, this just neatened everything up. The PCB design is also optimised for keeping the oven heat away from the control circuitry. This probably isn’t necessay, as the control cavity is insulated and fan cooled, however I didn’t want to take any chances!`,P,p,D='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Control_Board.JPG" alt="Reflow_Oven-Control_Board.JPG"/>',M,f,B=`To actually control the oven I am using two Solid State Relays, which independently control the top and bottom set of heating elements. This gives me some control over temperature distribution in the oven, and I have configured the controller to drive the bottom elements slightly hotter than the top elements, to prevent overheating of electronic components when reflowing. It is worth noting that in this oven, there are 4 heating elements, but they are rated at 120V, so must be wired in series pairs. To help with temperature distribution I also added a shrouded fan inlet which circulates air to avoid uneven reflowing. This fan also helps ramp the temperature down after the peak reflow temperature has been reached.
The SSRs I am using are generic <em>‘Fotek’</em> models from EBay. As a word of warning, virtually all the <em>‘Fotek’</em> SSRs on EBay are fakes. They still work just fine, but I would not take them anywhere near their 25A rating. As the ALDI toaster oven is rated at 1200W@230VAC, and I am switching the top and bottom elements separately, the peak current in the SSRs won’t exceed 3A. Nevertheless, I didn’t want to take any chances, so milled down an old PC heatsink to mount the relays to (see picture below), and oriented the heatsink so that there will be a constant flow of forced air over the relay block. Admittedly, my desire to have the controller entirely enclosed within the oven made me much more nervous about the possibility of thermal runaway.`,O,w,q='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Heatsink.JPG" alt="Reflow_Oven-Heatsink.JPG"/>',R,v,F=`After mounting the solid-state relays it was simply a case of adding the insulation blanket, silicon-sealing all the joints between the sheet metal parts, and adding a hole for the thermocouple. I tried to do the wiring all by the book, with proper spade terminals, star grounding, and nylon stand-offs for all the low-voltage circuitry. I also replaced one of the dials with a cutout for a small 40mm fan, to keep all the control circuitry cool. The tricky bit was getting everything to sit nicely while I positioned the outer shell!
Now while the build quality of the original ALDI oven is not bad, I don’t want to be taking it apart too often to reprogram the controller, so I added a USB port to the back, allowing me to tweak the PID controller and re-write the firmware while the machine was running. This is also much safer than testing the unit with all the mains wiring completely exposed. I do not endorse testing a reflow oven on a carpet with live contacts hanging out, but suffice to say I only did this once to make sure it was working before re-assembling it :)`,x,g,$='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Test_SSR.JPG" alt="Reflow_Oven-Test_SSR.JPG"/>',C,y,z=`I have published all the firmware, schematics, PCBs and BOM to <a href="https://github.com/BOJIT/Aldi-Ambiano-Reflow-Oven" rel="nofollow">GitHub</a>. This is far from the most complete reflow oven design, and I highly reccomend you check out both <a href="https://github.com/giacu92/Arduino-Reflow-Oven-Controller" rel="nofollow">giacu92</a> and <a href="https://github.com/0xPIT/reflowOvenController" rel="nofollow">0xPIT</a>’s reflow oven controller for further information if you are planning to design your own.
A reflow oven is a very handy thing to have around, and building it was great fun. Hopefully some of the information here is helpful for if you build your own. As for the firmware, I am making small adjustments and bugfixes as I find them, but I will not be actively maintaining this project on Github. If you have any firmware enhancements, be sure to contribute them back to <strong>giacu92’s</strong> repository - as far as I can tell it is still being actively maintained.`,H,b,N='<img src="https://cdn.bojit.org/img/posts/Reflow_Oven-Reflow_Thinkpad.JPG" alt="Reflow_Oven-Reflow_Thinkpad.JPG"/>';return{c(){h=i("p"),h.innerHTML=A,I=r(),d=i("p"),d.innerHTML=S,k=r(),m=i("p"),m.innerHTML=j,T=r(),u=i("p"),u.innerHTML=G,_=r(),c=i("p"),c.innerHTML=J,P=r(),p=i("p"),p.innerHTML=D,M=r(),f=i("p"),f.innerHTML=B,O=r(),w=i("p"),w.innerHTML=q,R=r(),v=i("p"),v.textContent=F,x=r(),g=i("p"),g.innerHTML=$,C=r(),y=i("p"),y.innerHTML=z,H=r(),b=i("p"),b.innerHTML=N},l(e){h=a(e,"P",{"data-svelte-h":!0}),l(h)!=="svelte-bp8lpf"&&(h.innerHTML=A),I=s(e),d=a(e,"P",{"data-svelte-h":!0}),l(d)!=="svelte-68lq8u"&&(d.innerHTML=S),k=s(e),m=a(e,"P",{"data-svelte-h":!0}),l(m)!=="svelte-a475qm"&&(m.innerHTML=j),T=s(e),u=a(e,"P",{"data-svelte-h":!0}),l(u)!=="svelte-3gyzji"&&(u.innerHTML=G),_=s(e),c=a(e,"P",{"data-svelte-h":!0}),l(c)!=="svelte-cmenlz"&&(c.innerHTML=J),P=s(e),p=a(e,"P",{"data-svelte-h":!0}),l(p)!=="svelte-1u5t0hu"&&(p.innerHTML=D),M=s(e),f=a(e,"P",{"data-svelte-h":!0}),l(f)!=="svelte-9m50e6"&&(f.innerHTML=B),O=s(e),w=a(e,"P",{"data-svelte-h":!0}),l(w)!=="svelte-1uxtrlg"&&(w.innerHTML=q),R=s(e),v=a(e,"P",{"data-svelte-h":!0}),l(v)!=="svelte-1aw9cwq"&&(v.textContent=F),x=s(e),g=a(e,"P",{"data-svelte-h":!0}),l(g)!=="svelte-1ascx2w"&&(g.innerHTML=$),C=s(e),y=a(e,"P",{"data-svelte-h":!0}),l(y)!=="svelte-1pheeiu"&&(y.innerHTML=z),H=s(e),b=a(e,"P",{"data-svelte-h":!0}),l(b)!=="svelte-do0qgi"&&(b.innerHTML=N)},m(e,t){o(e,h,t),o(e,I,t),o(e,d,t),o(e,k,t),o(e,m,t),o(e,T,t),o(e,u,t),o(e,_,t),o(e,c,t),o(e,P,t),o(e,p,t),o(e,M,t),o(e,f,t),o(e,O,t),o(e,w,t),o(e,R,t),o(e,v,t),o(e,x,t),o(e,g,t),o(e,C,t),o(e,y,t),o(e,H,t),o(e,b,t)},p:L,i:L,o:L,d(e){e&&(n(h),n(I),n(d),n(k),n(m),n(T),n(u),n(_),n(c),n(P),n(p),n(M),n(f),n(O),n(w),n(R),n(v),n(x),n(g),n(C),n(y),n(H),n(b))}}}const X={title:"Reflow Oven",date:"10-04-2018",published:!0,tile:{type:"image",image:"/tiles/2018-04-10-Reflow_Oven.PNG"}};class Z extends K{constructor(h){super(),Q(this,h,null,U,E,{})}}export{Z as default,X as metadata};
